# Generated by Django 4.2.6 on 2024-02-06 07:31

import api.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserTable',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('user_id', models.CharField(max_length=12, primary_key=True, serialize=False, unique=True, validators=[django.core.validators.RegexValidator('^[a-zA-Z0-9_]*$')], verbose_name='ユーザーID')),
                ('user_last', models.TextField(max_length=255, validators=[django.core.validators.MinLengthValidator(1), django.core.validators.MaxLengthValidator(255)], verbose_name='姓')),
                ('user_first', models.TextField(max_length=255, validators=[django.core.validators.MinLengthValidator(1), django.core.validators.MaxLengthValidator(255)], verbose_name='名')),
                ('user_icon', models.ImageField(blank=True, default='icon/user/default_icon.png', null=True, upload_to=api.models.savePath, verbose_name='アイコン')),
                ('user_stdNum', models.TextField(blank=True, null=True, unique=True, validators=[django.core.validators.MinLengthValidator(9), django.core.validators.MaxLengthValidator(9), django.core.validators.RegexValidator('^[0-9]*$')], verbose_name='学生番号')),
                ('user_grade', models.IntegerField(choices=[(0, '1年'), (1, '2年'), (2, '教師')], default=0, verbose_name='学年')),
                ('is_teacher', models.BooleanField(default=False, verbose_name='教師フラグ')),
                ('date_joined', models.DateField(auto_now_add=True, verbose_name='登録日')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'ユーザー',
                'verbose_name_plural': 'ユーザー',
                'abstract': False,
            },
            managers=[
                ('objects', api.models.MyUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('ast_id', models.AutoField(editable=False, primary_key=True, serialize=False, unique=True, verbose_name='課題ID')),
                ('ast_title', models.TextField(blank=True, null=True, verbose_name='課題名')),
                ('ast_disc', models.TextField(blank=True, null=True, verbose_name='課題説明')),
                ('ast_limit', models.DateField(default=django.utils.timezone.now, verbose_name='期限')),
            ],
            options={
                'verbose_name': '課題',
                'verbose_name_plural': '課題',
            },
        ),
        migrations.CreateModel(
            name='Classes',
            fields=[
                ('class_id', models.AutoField(editable=False, primary_key=True, serialize=False, unique=True, verbose_name='授業ID')),
                ('class_grade', models.IntegerField(choices=[(0, '1年'), (1, '2年')], default=0, verbose_name='学年')),
                ('class_name', models.TextField(unique=True, verbose_name='授業名')),
                ('class_teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='class_teacher', to=settings.AUTH_USER_MODEL, verbose_name='教師')),
            ],
            options={
                'verbose_name': '授業',
                'verbose_name_plural': '授業',
            },
        ),
        migrations.CreateModel(
            name='LikeCategory',
            fields=[
                ('like_id', models.AutoField(editable=False, primary_key=True, serialize=False, unique=True, verbose_name='好きなものID')),
                ('like_name', models.TextField(verbose_name='好きなもの名')),
                ('like_icon', models.ImageField(blank=True, default='icon/like/default_icon.png', null=True, upload_to=api.models.savePath, verbose_name='アイコン')),
            ],
            options={
                'verbose_name': '好きなものカテゴリ',
                'verbose_name_plural': '好きなものカテゴリ',
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('team_id', models.AutoField(editable=False, primary_key=True, serialize=False, unique=True, verbose_name='チームID')),
                ('team_grade', models.IntegerField(choices=[(0, '1年'), (1, '2年')], default=0, verbose_name='学年')),
                ('team_name', models.TextField(default='<function now at 0x7fe393396050>', verbose_name='チーム名')),
            ],
            options={
                'verbose_name': 'チーム',
                'verbose_name_plural': 'チーム',
            },
        ),
        migrations.CreateModel(
            name='TimeTable',
            fields=[
                ('time_id', models.AutoField(editable=False, primary_key=True, serialize=False, unique=True, verbose_name='時間割ID')),
                ('time_grade', models.IntegerField(choices=[(0, '1年'), (1, '2年')], default=0, verbose_name='学年')),
                ('time_section', models.IntegerField(choices=[(0, '1限'), (1, '2限'), (2, '3限'), (3, '4限'), (4, '5限'), (5, '6限')], default=0, verbose_name='コマ')),
                ('time_day', models.IntegerField(choices=[(0, '月曜日'), (1, '火曜日'), (2, '水曜日'), (3, '木曜日'), (4, '金曜日')], default=0, verbose_name='曜日')),
                ('time_classes', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='time_classes', to='api.classes', verbose_name='授業')),
            ],
            options={
                'verbose_name': '時間割',
                'verbose_name_plural': '時間割',
            },
        ),
        migrations.CreateModel(
            name='Notice',
            fields=[
                ('notice_id', models.AutoField(editable=False, primary_key=True, serialize=False, unique=True, verbose_name='お知らせID')),
                ('notice_main', models.TextField(blank=True, max_length=2048, null=True, verbose_name='本文')),
                ('notice_date', models.DateField(auto_now=True, verbose_name='更新日時')),
                ('notice_classes', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notice_classes', to='api.classes', verbose_name='授業')),
                ('notice_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notice_user', to=settings.AUTH_USER_MODEL, verbose_name='更新者')),
            ],
            options={
                'verbose_name': 'お知らせ',
                'verbose_name_plural': 'お知らせ',
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('message_id', models.AutoField(editable=False, primary_key=True, serialize=False, unique=True, verbose_name='メッセージID')),
                ('message', models.TextField(verbose_name='本文')),
                ('message_date', models.DateField(auto_now_add=True, verbose_name='投稿日時')),
                ('message_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='message_team', to='api.team', verbose_name='チーム')),
                ('message_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='message_user', to=settings.AUTH_USER_MODEL, verbose_name='ユーザー')),
            ],
            options={
                'verbose_name': 'メッセージ',
                'verbose_name_plural': 'メッセージ',
            },
        ),
        migrations.CreateModel(
            name='LinkClasses',
            fields=[
                ('link_id', models.AutoField(editable=False, primary_key=True, serialize=False, unique=True, verbose_name='リンクID')),
                ('link', models.TextField(default='https://yahoo.co.jp', max_length=500, verbose_name='URL')),
                ('link_name', models.TextField(default='', verbose_name='リンク名')),
                ('link_date', models.DateField(auto_now_add=True, verbose_name='作成日時')),
                ('link_classes', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='link_classes', to='api.classes', verbose_name='授業')),
            ],
            options={
                'verbose_name': 'リンク',
                'verbose_name_plural': 'リンク',
            },
        ),
        migrations.CreateModel(
            name='LikeUser',
            fields=[
                ('conf_id', models.AutoField(editable=False, primary_key=True, serialize=False, unique=True, verbose_name='好きなもの設定ID')),
                ('conf_like', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conf_like', to='api.likecategory', verbose_name='好きなもの')),
                ('conf_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conf_user', to=settings.AUTH_USER_MODEL, verbose_name='ユーザー')),
            ],
            options={
                'verbose_name': '好きなもの設定',
                'verbose_name_plural': '好きなもの設定',
            },
        ),
        migrations.CreateModel(
            name='AssignmentStatus',
            fields=[
                ('state_id', models.AutoField(editable=False, primary_key=True, serialize=False, unique=True, verbose_name='提出状況ID')),
                ('state_flg', models.BooleanField(default=False, verbose_name='提出状況')),
                ('state_ast', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='state_ast', to='api.assignment', verbose_name='課題')),
                ('state_std', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='state_std', to=settings.AUTH_USER_MODEL, verbose_name='ユーザー')),
            ],
            options={
                'verbose_name': '提出状況',
                'verbose_name_plural': '提出状況',
            },
        ),
        migrations.AddField(
            model_name='assignment',
            name='ast_classes',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ast_classes', to='api.classes', verbose_name='授業'),
        ),
    ]
